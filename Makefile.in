
export OS ?= @OS@
export AR ?= @AR@
export CC = @CC@
export CP ?= cp
export MKDIR ?= mkdir
export INSTALL ?= @echo INSTALL $(^) && install $(^)
export DOCKER ?= $(shell which docker)

CWD ?= $(shell pwd)

VERSION ?= @VERSION@

SRC = $(wildcard src/*.m)
OBJS = $(SRC:.m=.o)

TEST =
TESTS = $(wildcard test/*.m)
TESTSC = $(TESTS:.m=)

TARGET_NAME ?= @TARGET@
TARGET_SHARED_LIBRARY ?= lib$(TARGET_NAME).so
TARGET_STATIC_LIBRARY ?= lib$(TARGET_NAME).a

CFLAGS += @CFLAGS@
LDFLAGS += @LDFLAGS@
LDFLAGS += -o $(TARGET_SHARED_LIBRARY)

LIBRARY_DEPENDENCIES = @LIBRARY_DEPENDENCIES@

PREFIX ?= @PREFIX@
INCLUDEDIR ?= @INCLUDEDIR@/gossip
LIBDIR ?= @LIBDIR@
MANDIR ?= @MANDIR@
OUTDIR ?= @OUTDIR@

DOCKER_DEST ?= /home/root/lib@TARGET@

EXAMPLES ?= $(wildcard examples/*)

ifndef V
BRIEF_ECHO = printf $(BRIEF_FORMAT) $(1) $(2)
BRIEFC = AR CC TEST MKDIR CP MAKE
-include make/brief.mk
endif

.PHONY: $(TESTS)

all: $(TARGET_SHARED_LIBRARY) $(TARGET_STATIC_LIBRARY) $(EXAMPLES)

$(OBJS):
	$(CC) $(CFLAGS) -c $(@:.o=.m) -o $(@)

$(TARGET_SHARED_LIBRARY): $(OBJS)
	$(CC) $(LDFLAGS) $(LIBRARY_DEPENDENCIES) $(OBJS)
	@ln -sf $(TARGET_SHARED_LIBRARY) $(TARGET_SHARED_LIBRARY).$(VERSION)

$(TARGET_STATIC_LIBRARY): $(OBJS)
	$(AR) crus $(TARGET_STATIC_LIBRARY) $(OBJS)

test: $(TESTSC)
$(TESTS): $(TARGET_STATIC_LIBRARY)
	$(CC) $(@) $(TARGET_STATIC_LIBRARY) $(LIBRARY_DEPENDENCIES) $(CFLAGS) -o $(@:.m=)

$(TESTSC): $(TESTS)
	$(TEST)
	@./scripts/test $(@)

$(INCLUDEDIR):
	$(MKDIR) $(INCLUDEDIR)

.PHONY: $(LIBDIR)
$(LIBDIR): $(TARGET_STATIC_LIBRARY) $(TARGET_SHARED_LIBRARY)
	$(INSTALL) $(@)

install: $(INCLUDEDIR) $(LIBDIR)
	install include/gossip.h $(PREFIX)/include
	install include/gossip/* $(INCLUDEDIR)

uninstall:
	rm -rf $(INCLUDEDIR)
	rm -f $(PREFIX)/include/gossip.h
	rm -f $(LIBDIR)/$(TARGET_SHARED_LIBRARY)
	rm -f $(LIBDIR)/$(TARGET_STATIC_LIBRARY)

.PHONY: Dockerfile
docker: Dockerfile
Dockerfile:
ifneq (, $(DOCKER))
	$(DOCKER) build -t lib$(TARGET_NAME) .
endif

docker-test:
	OS=Linux ./configure
	$(DOCKER) run -i -v $(CWD):$(DOCKER_DEST) -t lib$(TARGET_NAME) sh $(DOCKER_DEST)/scripts/docker

.PHONY: examples examples/ $(EXAMPLES)
examples/: examples
examples: $(EXAMPLES)

$(EXAMPLES):
	$(MAKE) -C $(@)


clean:
	$(foreach e, $(EXAMPLES), $(MAKE) clean -C $(e))
	rm -f $(OBJS)
	rm -f $(wildcard $(TARGET_SHARED_LIBRARY)*)
	rm -f $(TARGET_STATIC_LIBRARY)
	rm -f $(TESTS:.m=)

